C51 COMPILER V9.01   TIMER                                                                 07/28/2017 16:31:10 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE TIMER
OBJECT MODULE PLACED IN .\obj\timer.obj
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE src\timer.c LARGE BROWSE ORDER INCDIR(.\inc) DEBUG OBJECTEXTEND PRINT(.\lst
                    -\timer.lst) OBJECT(.\obj\timer.obj)

line level    source

   1          #include <stdio.h>
   2          #include "timer.h"
   3          #include "global.h"
   4          #include "io.h"
   5          
   6          #define FOSC 22118400L  
   7          #define T1MS (65536-FOSC/1000)      //1T模式
   8          u32 systick_ms = 0;
   9          
  10          u32 get_systick_ms(void) {
  11   1              return systick_ms;
  12   1      } 
  13          
  14          //1000微秒@22.1184MHz 自动重装模式
  15          void timer0_init(void) {
  16   1              AUXR |= 0x80;           //定时器时钟1T模式
  17   1              TMOD &= 0xF0;           //设置定时器模式
  18   1              TL0 = 0x9A;             //设置定时初值
  19   1              TH0 = 0xA9;             //设置定时初值
  20   1              TF0 = 0;                //清除TF0标志
  21   1              TR0 = 1;                //定时器0开始计时
  22   1              ET0 = 1;                        //定时器0开始计时
  23   1              EA      = 1;                    //总开关
  24   1      }
  25          
  26          void timer1_init(void) {
  27   1              AUXR |= 0x40;           //定时器时钟1T模式
  28   1              TMOD &= 0x0F;           //设置定时器模式
  29   1              TMOD |= 0x10;           //设置定时器模式
  30   1              TL1 = 0x00;                     //设置定时初值
  31   1              TH1 = 0x28;                     //设置定时初值
  32   1              TF1 = 0;                        //清除TF1标志
  33   1              TR1 = 1;                        //定时器1开始计时
  34   1              ET1 = 1;                        //定时器0开始计时
  35   1              EA      = 1;                    //总开关
  36   1      }
  37          
  38          /*
  39          void timer0_reset(int t_us) {
  40                  TL0 = (int)(65536-22.1184*t_us);
  41                  TH0 = (int)(65536-22.1184*t_us) >> 8;
  42          }
  43          */
  44          
  45          void timer1_reset(int t_us) {
  46   1              //本来应该x22.1184 但由于单片机用的内部晶振，有一定误差，调整到下面这个值 
             -频率差不多50HZ
  47   1              TL1 = (int)(65536-20.4184*t_us);
  48   1              TH1 = (int)(65536-20.4184*t_us) >> 8;
  49   1      }
  50          
  51          float abs_float(float value) {
  52   1              if(value>0) {
  53   2                      return value;
C51 COMPILER V9.01   TIMER                                                                 07/28/2017 16:31:10 PAGE 2   

  54   2              }
  55   1              return (-value);
  56   1      }
  57          
  58          void duoji_inc_handle(u8 index) {       
  59   1              if(duoji_doing[index].inc != 0) {
  60   2                      if(abs_float(duoji_doing[index].aim - duoji_doing[index].cur) <= abs_float(duoji_doing[index].inc + duoj
             -i_doing[index].inc)) {
  61   3                              duoji_doing[index].cur = duoji_doing[index].aim;
  62   3                              duoji_doing[index].inc = 0;
  63   3                      } else {
  64   3                              duoji_doing[index].cur += duoji_doing[index].inc;
  65   3                      }
  66   2              }
  67   1      }
  68          
  69          
  70          void T0_IRQ(void) interrupt 1 {
  71   1              //timer0_reset(1000);
  72   1              systick_ms ++;
  73   1      }
  74          
  75          void T1_IRQ(void) interrupt 3 {
  76   1      
  77   1              static volatile u8 flag = 0;
  78   1              static volatile u8 duoji_index1 = 0;
  79   1              int temp;
  80   1      
  81   1              if(duoji_index1 == 8) {
  82   2                      duoji_index1 = 0;
  83   2              }
  84   1              
  85   1              if(!flag) {
  86   2                      timer1_reset((unsigned int)(duoji_doing[duoji_index1].cur));
  87   2                      //timer1_reset(500*DJ_P);
  88   2                      dj_io_set(duoji_index1, 1);
  89   2                      duoji_inc_handle(duoji_index1);
  90   2              } else {
  91   2                      temp = 2500 - (unsigned int)(duoji_doing[duoji_index1].cur);
  92   2                      if(temp < 20)temp = 20;
  93   2                      timer1_reset(temp);
  94   2                      //timer1_reset(2000*DJ_P);
  95   2                      dj_io_set(duoji_index1, 0);
  96   2                      duoji_index1 ++;
  97   2              }
  98   1              flag = !flag;
  99   1              
 100   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    781    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      6       7
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
