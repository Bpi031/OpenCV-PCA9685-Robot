C51 COMPILER V9.01   ADC                                                                   07/28/2017 16:06:20 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE ADC
OBJECT MODULE PLACED IN .\obj\adc.obj
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE src\adc.c LARGE BROWSE ORDER INCDIR(.\inc) DEBUG OBJECTEXTEND PRINT(.\lst\a
                    -dc.lst) OBJECT(.\obj\adc.obj)

line level    source

   1          #include "adc.h"
   2          #include "intrins.h"
   3          
   4          sfr ADC_CONTR   =   0xBC;           //ADC控制寄存器
   5          sfr ADC_RES     =   0xBD;           //ADC高8位结果
   6          sfr ADC_LOW2    =   0xBE;           //ADC低2位结果
   7          sfr P1ASF       =   0x9D;           //P1口第2功能控制寄存器
   8          #define ADC_POWER   0x80            //ADC电源控制位
   9          #define ADC_FLAG    0x10            //ADC完成标志
  10          #define ADC_START   0x08            //ADC起始控制位
  11          #define ADC_SPEEDLL 0x00            //540个时钟
  12          #define ADC_SPEEDL  0x20            //360个时钟
  13          #define ADC_SPEEDH  0x40            //180个时钟
  14          #define ADC_SPEEDHH 0x60            //90个时钟
  15          
  16          unsigned char adc_init(unsigned char ch) {
  17   1              P1ASF = 1 << ch;                   //设置P1口为AD口
  18   1          ADC_RES = 0;                    //清除结果寄存器
  19   1          ADC_CONTR = ADC_POWER | ADC_SPEEDLL;
  20   1              return 0;
  21   1      }
  22          
  23          unsigned short adc_read(unsigned char ch) {
  24   1          ADC_CONTR = ADC_POWER | ADC_SPEEDLL | ch | ADC_START;
  25   1          _nop_();                        //等待4个NOP
  26   1          _nop_();
  27   1          _nop_();
  28   1          _nop_();
  29   1          while (!(ADC_CONTR & ADC_FLAG));//等待ADC转换完成
  30   1          ADC_CONTR &= ~ADC_FLAG;         //Close ADC
  31   1      
  32   1          return (((ADC_RES<<2))+ADC_LOW2);   //返回10位ADC结果
  33   1              //return ADC_RES;                       //返回8位ADC结果
  34   1      
  35   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     56    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
