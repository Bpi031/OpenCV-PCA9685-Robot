C51 COMPILER V9.01   SPI                                                                   07/28/2017 16:06:20 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE SPI
OBJECT MODULE PLACED IN .\obj\spi.obj
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE src\spi.c LARGE BROWSE ORDER INCDIR(.\inc) DEBUG OBJECTEXTEND PRINT(.\lst\s
                    -pi.lst) OBJECT(.\obj\spi.obj)

line level    source

   1          #include "stc15.h"
   2          #include "spi.h"
   3          #define FOSC MAIN_Fosc
   4          
   5          /************对SPCTL寄存器的设置位宏定义*************/
   6          #define SSIG    0x80  //SS引脚忽略
   7          #define SPEN    0x40  //SPI使能位
   8          #define DORD    0x20  //SPI数据发送LSB最先发送
   9          #define MSTR    0x10  //主从模式选择
  10          #define CPOL    0x08  //SPICLK空闲时为高电平
  11          #define CPHA    0x04  //数据在SPICLK的前时钟沿驱动,并在后时钟沿采样
  12          #define SP_CLK0 0x00  //SPI时钟频率为CPU_CLK/4
  13          #define SP_CLK1 0x01  //SPI时钟频率为CPU_CLK/16
  14          #define SP_CLK2 0x02  //SPI时钟频率为CPU_CLK/64
  15          #define SP_CLK3 0x03  //SPI时钟频率为CPU_CLK/128
  16          /************对SPSTAT寄存器的设置位宏定义************/
  17          #define SPIF    0x80  //传输完成标志
  18          #define WCOL    0x40  //SPI写冲突标志           
  19          
  20          
  21          /****************************************
  22          *函数名称:Spi0MasterInit
  23          *输    入:无
  24          *输    出:无
  25          *功    能:SPI0初始化为主机模式
  26          ******************************************/
  27          void SpiMasterInit(void)
  28          {
  29   1      #if 0
                               /* SPI MISO P1.4输入*/
                              P1M1|=  1<<4 ;
                              P1M0&=~(1<<4);
                               
                               /* SPI MOSI,SCK,CS P1.2,P1.3,P1.5推挽输出*/
                              P1M1&=~((1<<2)|(1<<3)|(1<<5));
                              P1M0|=  (1<<2)|(1<<3)|(1<<5);
                               
                  SPI_CS(1);
                              SPI_MOSI(1);
                              SPI_SCK(1);
              #else   
  42   1                      P1M1&=~(1<<2);
  43   1                      P1M0|= (1<<2);
  44   1          SPDAT  = 0;         //清空数据寄存器
  45   1          SPSTAT = SPIF|WCOL; //清空SPI状态寄存器
  46   1                      
  47   1      #if FOSC==33000000UL            
                        SPCTL  = SPEN|MSTR|SP_CLK1|SSIG; //SPI设置为主机模式
              #else
  50   1                SPCTL  = SPEN|MSTR|SP_CLK0|SSIG; //SPI设置为主机模式
  51   1      #endif          
  52   1          
  53   1      #endif           
  54   1      }
C51 COMPILER V9.01   SPI                                                                   07/28/2017 16:06:20 PAGE 2   

  55          
  56          /****************************************
  57          *函数名称:SpiWriteRead
  58          *输    入:ucData 要发送的数据
  59          *输    出:返回字节数据
  60          *功    能:SPI读写数据
  61          ******************************************/
  62          #if 0
              UINT8 SpiWriteRead(UINT8 d)
              {
                  UINT8 i;
                      
                        SPI_SCK(0);
                      
                  for(i=0; i<8; i++)
                  {
                                        /*   发送字节高位 */
                                  if(d & 0x80)
                                              {
                                                       SPI_MOSI(1);
                                              }
                                              else
                                              {
                                                       SPI_MOSI(0);
                                              }
                                              
                                              /*   接收字节高位 */
                                              d<<=1;
                                              
                                              SPI_SCK(1);
                                      
                                              if(SPI_MISO())
                                              {
                                                       d|=0x01;
                                              }
                                                      
                                              SPI_SCK(0);
              
                              
                              }       
                              
                              return d;
              }
              #else
  99          
 100          
 101          
 102          
 103          UINT8 SpiWriteRead(UINT8 d)
 104          {
 105   1          SPDAT = d;                  //触发SPI发送数据
 106   1          while (!(SPSTAT & SPIF));   //等待发送完成
 107   1          SPSTAT = SPIF | WCOL;       //清除SPI状态位
 108   1          return SPDAT;               //返回SPI数据
 109   1      }
 110          #endif
 111          
 112          /*
 113          void SpiSetSpeedLow(void)
 114          {
 115              SPCTL  &=~SP_CLK3; 
 116                    SPCTL |=SP_CLK3;
C51 COMPILER V9.01   SPI                                                                   07/28/2017 16:06:20 PAGE 3   

 117          }
 118          
 119          void SpiSetSpeedHigh(void)
 120          {
 121              SPCTL  &=~SP_CLK3; 
 122          #if FOSC==33000000UL            
 123                    SPCTL  |=SP_CLK1;
 124          #else
 125                    SPCTL  |=SP_CLK0;
 126          #endif
 127          }
 128          */
 129          
 130          
 131          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     29    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
